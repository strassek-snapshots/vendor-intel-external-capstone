// Copyright (C) 2015 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


cc_defaults {
    name: "libcapstone_defaults",
    defaults: ["art_defaults"],
    host_supported: true,
    srcs: [
       "arch/X86/X86Disassembler.c",
        "arch/X86/X86DisassemblerDecoder.c",
        "arch/X86/X86IntelInstPrinter.c",
        "arch/X86/X86Mapping.c",
        "arch/X86/X86Module.c",
	"cs.c",
	"MCInst.c",
	"MCInstrDesc.c",
	"MCRegisterInfo.c",
	"SStream.c",
	"utils.c",
    ],
    cflags: [
        "-Wno-unused-parameter",
        "-Wno-tautological-compare",
	"-Werror",
        "-Wextra",
        "-Wstrict-aliasing",
        "-fstrict-aliasing",
        "-Wunreachable-code",
        "-Wredundant-decls",
        "-Wunused",
        "-Wno-shadow",
        "-Wno-unused-parameter",
        "-Wno-sign-compare",
        "-fvisibility=protected",
        "-DCAPSTONE_USE_SYS_DYN_MEM",
        "-DCAPSTONE_X86_ATT_DISABLE",
        "-D_FILE_OFFSET_BITS=64",
	"-DCAPSTONE_HAS_X86",

    ],
    //local_include_dirs: ["*"],
    export_include_dirs: ["include"],

}

cc_library {
    name: "libcapstone",
    clang: true,
    host_supported: true,
    vendor_available: true,
    vndk: {
        enabled: true,
    },
    defaults: [
       "libcapstone_defaults",
    ],
 target: {
        android: {
            shared_libs: [
                "libcutils",
            ],
            enabled: true,
        },
	linux: {
            cflags: [
                "-Wmissing-noreturn",
            ],
	    shared_libs: [
                "libcutils",
            ],
        },

        host: {
	    host_ldlibs: ["-lpthread",],
        },

    },
}

// Create a dummy static version of libcapstone which expose the necessary symbols
// but throws when called. This can be used to get static binaries which don't
// need the real functionality of the sig chain but need to please the linker.
cc_library_static {
    name: "libcapstone_dummy",
    host_supported: true,
    defaults: ["libcapstone_defaults"],
}
